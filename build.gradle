import net.fabricmc.loom.LoomGradlePlugin

buildscript {
	repositories {
		jcenter()
		maven {
			name = 'Modmuss50'
			url = 'http://maven.modmuss50.me/'
		}
	}
	dependencies {
		classpath "net.fabricmc:fabric-loom:0.2.2-SNAPSHOT"
	}
}

plugins {
	id 'java'
	id 'eclipse'
	id 'idea'
}

apply plugin: LoomGradlePlugin
apply plugin: 'maven'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "io.github.prospector.modmenu"
archivesBaseName = "ModMenu"
version = "1.5.4"

def ENV = System.getenv()
if (ENV.BUILD_NUMBER) {
	version = version + "-" + "${System.getenv().BUILD_NUMBER}"
}

minecraft {
}

repositories {
	maven {url "https://maven.jamieswhiteshirt.com/libs-release/"}
}

dependencies {
	minecraft "com.mojang:minecraft:1.14.1"
	mappings "net.fabricmc:yarn:1.14.1+build.10"
	modCompile "net.fabricmc:fabric-loader:0.4.7+build.147"
	modCompile "net.fabricmc.fabric-api:fabric-api:0.3.0-pre+build.156"
	modCompile "com.jamieswhiteshirt:developer-mode:1.0.11"

	include "net.fabricmc.fabric-api:fabric-resource-loader-v0:0.1.0+f1618918"
}

processResources {
	inputs.property "version", project.version
	from(sourceSets.main.resources.srcDirs) {
		include 'fabric.mod.json'
		expand version: project.version
	}
	from(sourceSets.main.resources.srcDirs) {
		exclude 'fabric.mod.json'
	}
}

uploadArchives {
	repositories {
		mavenDeployer {
			//This is used when the build is done on a slave node
			if (project.hasProperty('mavenPass')) {
				println 'Uploading to remote Maven Repo'
				repository(url: "http://mavenupload.modmuss50.me/") {
					authentication(userName: "buildslave", password: project.getProperty('mavenPass'))
				}
			} else {
				//this is when the build is executed on the master node
				println 'Uploading to local Maven Repo'
				repository(url: "file:///var/www/maven/")
			}
			pom {
				groupId = project.group
				version = project.version
				artifactId = project.archivesBaseName
				project {
					name project.archivesBaseName
					packaging 'jar'
					description project.archivesBaseName
					url 'https://github.com/Prospector/ModMenu'
					scm {
						url 'https://github.com/Prospector/ModMenu'
						connection 'scm:git:git@github.com:Prospector/ModMenu.git'
						developerConnection 'scm:git:git@github.com:Prospector/ModMenu.git'
					}
				}
			}
		}
	}
}
